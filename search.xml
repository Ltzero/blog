<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[目标是前端程序员?]]></title>
    <url>%2F2017%2F12%2F02%2Fatitude%2F</url>
    <content type="text"><![CDATA[前言 转眼间今年就要毕业了，感叹时间过的快的同时，更多的是对未来的一种迷茫，这种迷茫不是对职业方向的迷茫，而是有了方向以后该怎么去行动如何实现的迷茫。 学习路径起点 在大二的时候我第一次接触到了网页制作，当时学习了asp.net。光是简简单单拖几个控件就能实现出一些小效果让对这一块毫无所知的我仿佛发现了新大陆一般，对于这种技术我产生了浓厚的兴趣，随后在进行课程设计的时候和几个室友一起制作了第一个仿照学校网站首页的静态主页，制作的过程中我们接触到了css，html，用到了简单的sql集成数据库实现了小型的用户登陆，从网上找了一些小插件例如时间天气等装饰网站。过程虽然不是那么顺利但是很快乐，也算是我的启蒙路。 路口 随后的日子因为课程的结束渐渐的这门课程又淡出了我的视线，当时的新鲜感可能有点消退，不过由衷的觉得能够自己做出一个网站是多么的厉害，在之后一个契机让我彻底为前端程序员这条路径着迷——————JavaScript，学了JavaScript之后才发现原来对于网页制作对于前端的理解是多么粗浅，前端不仅仅是拖几个控件改改css样式那么简单，如果说只有html和css的页面是一个驱壳的话，那么JavaScript无疑赋予了这幅驱壳灵魂，让这句驱壳动了起来，有了灵魂的页面能够实现各种绚丽的效果，各种各样的DOM操作就像身体里的神经把我们所想的各种逻辑各种行为都传达给了页面，然后呈现给我的是和之前不一样风格的网页，感叹技术伟大的同时也对这个行业有了更浓厚的兴趣然后变得想要进入这一个行业去学去了解去实现更多的东西了 路径 随后的日子里我变得想要更深入的了解这个行业了，不同于后端，前端所见即所得，通过不断的制作一个个小的demo了解学习和巩固JavaScript知识之后，我又接触到了jQuery，正如其网站上所写的一样write less do more，这款js框架确实做到了其理念，更快捷的dom操作，多样的选择器，各种封装好的函数方法就能实现用原生js需要大量代码才能实现的功能，让我又来了更浓厚的兴趣，然后是bootstrap，vue.js这些，不得不让人感叹我们现在确实是站在了巨人的肩膀上。今天读了网上的一位叫阮一峰的大神的一篇文章《不要自称为程序员》，里面的观点：”不要自称为程序员而是要把自己描述成与增加收入、降低成本有关系的人”。”不要限定自己”的观点犀利而明确，一针见血，而且早在11年就能有这样的观点着实让人敬佩，也意识到了自己还有很多东西需要学习需要努力。 结语Do more and write more或许是我现在更需要的。]]></content>
      <categories>
        <category>感悟</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bootstrap学习笔记]]></title>
    <url>%2F2017%2F12%2F01%2Fbootstrap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[前言 前不久接触到了响应式这个词汇，根据网上各种学习资料，通过学习bootstrap让我更好的明白什么是响应式开发 学习方法 阅读官方api文档：阅读官方给出的文档对于快速上手而言一直是最佳的选择，而且现在很多文档都给出了相应的中文版本，方便英语渣(我)的阅读。 浏览一些有关博客和资料：在网络普及的今天，不论何时何地都能快速的获得你想要的资源，网上也有很多热心的大神分享自己的相关经验，不失为一种快速学习的好办法。 看一些视频：方法和上述相同，通过视频讲解可以加深和巩固所学的内容。 做一些demon：仿照官网给的一些例子自己尝试做了几个相关demo，进行练习。 bootstrap的使用 1.安装 官方文档有详细的安装说明，大体和jQuery相似，下载或者使用在线cdn，引入bootstrap的js文件（也可以通过npm进行安装），其次指定编码格式以及设置好meta标签，先在你想使用的html页面中head部分引入bootstrap.css文件，然后再在body部分引入bootstrap.js文件（值得注意的是bootstrap的功能依赖于jQuery，所以在引入bootstrap.js之前应该先引入jQuery文件），以上为使用bootstrap前的准备工作 2.使用 使用bootstrap很简单，大部分样式和组件都通过类名控制，只需建立相应标签再赋予类名，就能使用，例如创建一个警告按钮可以定义一个”html”中的”button”标签,然后给标签添加class=”btn btn-warning”即可获得效果。 3.特点 重点来了，bootstrap受欢迎的主要原因不仅因为其简单方便，我认为最主要的原因还是其对响应式布局良好的兼容性，和特色的栅格系统，通过对每一个组件或模块进行栅格化定义，可以让你的网页在不同的设备上获得不一样的视觉效果，从而解决了不同设备上的显示问题，让网站的用户体验得到提升。 栅格系统具体将页面分为了12列你可以通过设置组件所占的列的比重来使其根据你屏幕大小的改变而自适应，栅格的参数又由设备的不同分为了四类，你可以通过设置一个组件在每一个类别中的列所占比例来控制其大小，官网有详细的文档就不多赘述了。 对于响应式的理解百度百科上的概念为：&quot;就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念是为解决移动互联网浏览而诞生的。&quot; CSS3:在CSS3中使用了Media Query（媒介查询）属性来对于不同的分辨率进行相应的设置，通过设置不同分辨率的区间来区分和显示不同的页面，bootstrap也是基于这个原理来完成响应式布局的。 结尾以上为个人学习过程中的一些小收获和心得，涉及的内容很浅，要往深的层面理解还需要大量的时间和练习。]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
        <tag>响应式</tag>
        <tag>移动端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建小记(二)]]></title>
    <url>%2F2017%2F11%2F30%2F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B02%2F</url>
    <content type="text"><![CDATA[前言 个人博客搭建的第四天，原本着手对默认主题landscape修改已经小有成效，深入后发现默认主题提供的功能有限，经过纠结还是采用了next主题，这款主题有很强大的功能，稍加改造应该能得到想要的效果 步骤 主题的安装：主要采用npm工具根据官方文档进行安装 自定义配置：结合网上很多博文进行修改和自定制（主要对主题配置文件和默认配置文件进行设置） 自定义样式：根据自己的需要对原有样式进行改造（next主题人性化提供了自定义的custom.styl文件，意外发现.styl后缀格式的文件里居然能直接写css样式），例如自定义标题，自定义个人信息面板等，js文件添加同理，需要定义文件外部引用 收获 略微学习了一点stylus语法 巩固了css样式及css3样式的编写 对网页布局有了重新认识 学习了一些其他git功能的使用]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客搭建小记(一)]]></title>
    <url>%2F2017%2F11%2F28%2F%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AE%B01%2F</url>
    <content type="text"><![CDATA[个人博客搭建的第二天，今天主要研究了一下和hexo博客相关的文档，以及学习怎么对默认主题landscape样式的修改,毕竟如果能自己定制一款主题的话岂不是很棒，然而遇到的问题很多，例如,想修改.css文件却在主题的目录里找到了.style后缀的文件，之前没有接触过这种语法，一开始看的有点懵，不过仔细看一会发现其实语法和.css相差不多，不过貌似对于缩进很严格不缩进容易报错……然后参考了网上一些大佬的博客自定义css样式对我帮助很大，然后对hexo和github的使用进一步了解了一些，算是收获颇丰。]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我搭建的第一个个人的网站]]></title>
    <url>%2F2017%2F11%2F27%2Ffirst%2F</url>
    <content type="text"><![CDATA[您好！欢迎来到我的个人小站。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>吐槽</tag>
      </tags>
  </entry>
</search>
